{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWzNEM01suzQa23XKlpLJC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"K6WCwhjW1MW6","executionInfo":{"status":"ok","timestamp":1664648284578,"user_tz":420,"elapsed":3874,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"outputs":[],"source":["import numpy as np\n","from tensorflow import keras\n","from tensorflow.keras import layers\n"]},{"cell_type":"code","source":["# Model / data parameters\n","numClasses = 10\n","inputShape = (28, 28, 1)"],"metadata":{"id":"ObhsjwZA219n","executionInfo":{"status":"ok","timestamp":1664648284579,"user_tz":420,"elapsed":10,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# the data, split between train and test sets\n","(xTrain, yTrain), (xTest, yTest) = keras.datasets.mnist.load_data()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dKTgalYw3KBW","executionInfo":{"status":"ok","timestamp":1664648285596,"user_tz":420,"elapsed":1025,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"2b4746bd-8a62-4850-9151-d95c41d31970"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","11501568/11490434 [==============================] - 0s 0us/step\n"]}]},{"cell_type":"code","source":["# Scale images to the [0, 1] range\n","xTrain = xTrain.astype(\"float32\") / 255\n","xTest = xTest.astype(\"float32\") / 255"],"metadata":{"id":"0EtVXYOV3-DV","executionInfo":{"status":"ok","timestamp":1664648286213,"user_tz":420,"elapsed":620,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Make sure images have shape (28, 28, 1)\n","xTrain = np.expand_dims(xTrain, -1)\n","xTest = np.expand_dims(xTest, -1)\n","print(\"xTrain shape:\", xTrain.shape)\n","print(xTrain.shape[0], \"train samples\")\n","print(xTest.shape[0], \"test samples\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o0qkbWSQ4x_-","executionInfo":{"status":"ok","timestamp":1664648286215,"user_tz":420,"elapsed":10,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"581e4e3b-2e80-4b1d-899e-98970d66c18a"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["xTrain shape: (60000, 28, 28, 1)\n","60000 train samples\n","10000 test samples\n"]}]},{"cell_type":"code","source":["# convert class vectors to binary class matrices\n","yTrain = keras.utils.to_categorical(yTrain, numClasses)\n","yTest = keras.utils.to_categorical(yTest, numClasses)"],"metadata":{"id":"jhTr0HPJ5V4U","executionInfo":{"status":"ok","timestamp":1664648288129,"user_tz":420,"elapsed":175,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["model = keras.Sequential(\n"," [\n"," keras.Input(shape=inputShape),\n"," layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n"," layers.MaxPooling2D(pool_size=(2, 2)),\n"," layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n"," layers.MaxPooling2D(pool_size=(2, 2)),\n"," layers.Flatten(),\n"," layers.Dropout(0.5),\n"," layers.Dense(numClasses, activation=\"softmax\"),\n"," ]\n",")\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bpUEEbP25XMq","executionInfo":{"status":"ok","timestamp":1664648459437,"user_tz":420,"elapsed":190,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"d8a60cbd-4905-4fdf-be3d-b4d11d953a36"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_2 (Conv2D)           (None, 26, 26, 32)        320       \n","                                                                 \n"," max_pooling2d_2 (MaxPooling  (None, 13, 13, 32)       0         \n"," 2D)                                                             \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 11, 11, 64)        18496     \n","                                                                 \n"," max_pooling2d_3 (MaxPooling  (None, 5, 5, 64)         0         \n"," 2D)                                                             \n","                                                                 \n"," flatten_1 (Flatten)         (None, 1600)              0         \n","                                                                 \n"," dropout_1 (Dropout)         (None, 1600)              0         \n","                                                                 \n"," dense_1 (Dense)             (None, 10)                16010     \n","                                                                 \n","=================================================================\n","Total params: 34,826\n","Trainable params: 34,826\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["batchSize = 128\n","epochs = 15\n","model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", \n","metrics=[\"accuracy\"])\n","model.fit(xTrain, yTrain, batch_size=batchSize, epochs=epochs, validation_split=0.1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QMNjbOoO8dyk","executionInfo":{"status":"ok","timestamp":1664649160887,"user_tz":420,"elapsed":669183,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"da2bef51-51a4-4a38-fa6c-16578653de62"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/15\n","422/422 [==============================] - 45s 105ms/step - loss: 0.3758 - accuracy: 0.8867 - val_loss: 0.0859 - val_accuracy: 0.9772\n","Epoch 2/15\n","422/422 [==============================] - 44s 105ms/step - loss: 0.1175 - accuracy: 0.9649 - val_loss: 0.0594 - val_accuracy: 0.9833\n","Epoch 3/15\n","422/422 [==============================] - 44s 105ms/step - loss: 0.0890 - accuracy: 0.9728 - val_loss: 0.0516 - val_accuracy: 0.9852\n","Epoch 4/15\n","422/422 [==============================] - 45s 106ms/step - loss: 0.0746 - accuracy: 0.9777 - val_loss: 0.0438 - val_accuracy: 0.9892\n","Epoch 5/15\n","422/422 [==============================] - 44s 105ms/step - loss: 0.0648 - accuracy: 0.9802 - val_loss: 0.0431 - val_accuracy: 0.9890\n","Epoch 6/15\n","422/422 [==============================] - 44s 104ms/step - loss: 0.0588 - accuracy: 0.9820 - val_loss: 0.0348 - val_accuracy: 0.9910\n","Epoch 7/15\n","422/422 [==============================] - 43s 101ms/step - loss: 0.0524 - accuracy: 0.9833 - val_loss: 0.0367 - val_accuracy: 0.9892\n","Epoch 8/15\n","422/422 [==============================] - 45s 105ms/step - loss: 0.0493 - accuracy: 0.9847 - val_loss: 0.0339 - val_accuracy: 0.9902\n","Epoch 9/15\n","422/422 [==============================] - 45s 108ms/step - loss: 0.0446 - accuracy: 0.9859 - val_loss: 0.0310 - val_accuracy: 0.9917\n","Epoch 10/15\n","422/422 [==============================] - 45s 106ms/step - loss: 0.0418 - accuracy: 0.9861 - val_loss: 0.0319 - val_accuracy: 0.9912\n","Epoch 11/15\n","422/422 [==============================] - 45s 107ms/step - loss: 0.0412 - accuracy: 0.9869 - val_loss: 0.0315 - val_accuracy: 0.9918\n","Epoch 12/15\n","422/422 [==============================] - 45s 106ms/step - loss: 0.0371 - accuracy: 0.9883 - val_loss: 0.0284 - val_accuracy: 0.9922\n","Epoch 13/15\n","422/422 [==============================] - 44s 103ms/step - loss: 0.0358 - accuracy: 0.9887 - val_loss: 0.0297 - val_accuracy: 0.9913\n","Epoch 14/15\n","422/422 [==============================] - 48s 114ms/step - loss: 0.0348 - accuracy: 0.9891 - val_loss: 0.0275 - val_accuracy: 0.9925\n","Epoch 15/15\n","422/422 [==============================] - 44s 104ms/step - loss: 0.0344 - accuracy: 0.9890 - val_loss: 0.0294 - val_accuracy: 0.9925\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7facc841f050>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["score = model.evaluate(xTest, yTest, verbose=0)\n","print(\"Test loss:\", score[0])\n","print(\"Test accuracy:\", score[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8YCUhT2p8kbR","executionInfo":{"status":"ok","timestamp":1664649509290,"user_tz":420,"elapsed":3033,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"ed914106-bb3c-4137-de02-a5e869a5dc5d"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Test loss: 0.02540873922407627\n","Test accuracy: 0.9914000034332275\n"]}]},{"cell_type":"code","source":["from tensorflow.keras.models import load_model\n","model.save('/content/drive/My Drive/mnist.h5')"],"metadata":{"id":"glehbRJ48p_w","executionInfo":{"status":"ok","timestamp":1664652076657,"user_tz":420,"elapsed":229,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["model.save(\"./model_name.h5\")"],"metadata":{"id":"_32Jqx5_1VXz","executionInfo":{"status":"ok","timestamp":1664649512055,"user_tz":420,"elapsed":176,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":27,"outputs":[]}]}