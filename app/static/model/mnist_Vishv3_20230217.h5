{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPPg9ia0AsFH/r7kBnClMcn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"UpLOWYhyQDeF","executionInfo":{"status":"ok","timestamp":1677105587656,"user_tz":480,"elapsed":348,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"outputs":[],"source":["#Single image evaluation with two single-digit models (tens-digit and ones-digit model)\n","#specify evaluataion target manually at the \"filename\" \n","\n","from keras.models import load_model\n","import numpy as np\n","from keras.preprocessing import image\n","\n"]},{"cell_type":"code","source":["rpath = \"F:/Google Drive/User_Backup/training\"\n"],"metadata":{"id":"4s9y4H70QRpZ","executionInfo":{"status":"ok","timestamp":1677105588708,"user_tz":480,"elapsed":180,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["\n","model = load_model(\"F:/Google Drive/User_Backup/model/ones_digit.h5\")\n","# model.summary()\n","model_t = load_model(\"F:/Google Drive/User_Backup/model/tens_digit.h5\")\n","# model.summary()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":375},"id":"FMjCk1FFQXVQ","executionInfo":{"status":"error","timestamp":1677105592598,"user_tz":480,"elapsed":779,"user":{"displayName":"Vishv Dhanraj","userId":"04709065859608768684"}},"outputId":"81097584-7a01-4cc0-efc3-28aa5bf6118b"},"execution_count":4,"outputs":[{"output_type":"error","ename":"OSError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mOSError\u001b[0m                                   Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-4d355e420ad5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"F:/Google Drive/User_Backup/model/ones_digit.h5\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m# model.summary()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmodel_t\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"F:/Google Drive/User_Backup/model/tens_digit.h5\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# model.summary()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m             \u001b[0;31m# `tf.debugging.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 70\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     71\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/saving/legacy/save.py\u001b[0m in \u001b[0;36mload_model\u001b[0;34m(filepath, custom_objects, compile, options)\u001b[0m\n\u001b[1;32m    225\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_str\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    226\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_str\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 227\u001b[0;31m                         raise IOError(\n\u001b[0m\u001b[1;32m    228\u001b[0m                             \u001b[0;34mf\"No file or directory found at {filepath_str}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m                         )\n","\u001b[0;31mOSError\u001b[0m: No file or directory found at F:/Google Drive/User_Backup/model/ones_digit.h5"]}]},{"cell_type":"code","source":["filename = '/8/3.png'\n","f_name = rpath + filename\n","img = image.load_img(f_name, color_mode ='grayscale', target_size=(25, 44))\n","#img = image.load_img(f_name, grayscale = True, color_mode ='grayscale', target_size=(25, 44))\n","x = image.img_to_array(img)\n","x /= 255\n","x = np.expand_dims(x, axis=0)\n","o_proba = model.predict(x)\n","t_proba = model_t.predict(x)\n","o_result = o_proba.tolist()\n","t_result = t_proba.tolist()\n"],"metadata":{"id":"GeCi5ZX1QaF7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","#Evaluation result\n","#print(model.predict_classes(x))\n","#print(result)\n","#for i in range(10):\n","    # print(i, t_result[0][int(i)], o_result[0][int(i)])\n","print([model_t.predict_classes(x)[0]], [model.predict_classes(x)[0]],t_result[0][model_t.predict_classes(x)[0]], o_result[0][model.predict_classes(x)[0]])\n"],"metadata":{"id":"cGCs__WdQb_w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# Evaluate all training data\n","\n","from keras.models import load_model\n","import numpy as np\n","from keras.preprocessing import image\n"],"metadata":{"id":"lfOz3CXlQd-I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","rpath = \"F:/Google Drive/User_Backup/training\"\n"],"metadata":{"id":"X_NoLEKMQiGN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","model = load_model(\"F:/Google Drive/User_Backup/model/ones_digit.h5\")\n","# model.summary()\n","model_t = load_model(\"F:/Google Drive/User_Backup/model/tens_digit.h5\")\n","# model.summary()"],"metadata":{"id":"V4A7lJW_QjpS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","acc = []\n","total = 0\n","for j in range (0, 100):\n","    print(j)\n","    missed = 0\n","    for k in range (500):\n","        tpath = rpath + \"/\" + str(j) + \"/\" + str(k) + \".png\"\n","        img = image.load_img(tpath, color_mode ='grayscale', target_size=(25, 44))\n","        x = image.img_to_array(img)\n","        x /= 255\n","        x = np.expand_dims(x, axis=0)\n","        o_proba = model.predict(x)\n","        t_proba = model_t.predict(x)\n","        o_result = o_proba.tolist()\n","        t_result = t_proba.tolist()\n","        t = [model_t.predict_classes(x)[0]][0]\n","        o = [model.predict_classes(x)[0]][0]\n","        num = int(t)*10 + int(o)\n","        if j != num:\n","            missed = missed + 1\n","            total += 1\n","            #print (j,k)\n","    acc.append(missed/500)\n","for j in range (0,100):\n","    print(acc[j])\n","print(total)\n","     "],"metadata":{"id":"VDaiG6hrQjvE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["   \n","#Evaluation result\n","#print(model.predict_classes(x))\n","#print(result)\n","#for i in range(10):\n","    # print(i, t_result[0][int(i)], o_result[0][int(i)])\n","#print([model_t.predict_classes(x)[0]], [model.predict_classes(x)[0]],t_result[0][model_t.predict_classes(x)[0]], o_result[0][model.predict_classes(x)[0]])\n"],"metadata":{"id":"L1vCUH7QQoUI"},"execution_count":null,"outputs":[]}]}